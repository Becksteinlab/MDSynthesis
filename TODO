=============
TODO List
=============

Containers
==========

Containers.Sim
~~~~~~~~~~~~~~

+ Add basic VMD method to Sim object.

+ Add the ability to give a structure or structure+trajectory to generate
  universe automatically. Saves a step for interactive work, and shouldn't
  overcomplicate the class. :)

+ Add a top-level registry of container objects that is updated by each object
  each one is regenerated. This will allow SimSet object to query the registry
  and always find their members, even when they move.

    + Have each sim represented by a unique hash that is made from something
      unique to that object that will never be the same as another. The hash
      can be static, too, meaning that it will never be re-generated.
        + perhaps make it generated on object's initial generation?


Containers.SimSet
~~~~~~~~~~~~~~~~~

+ build class to operate as a bundle of Sim or Sim-derived objects
+ make Sim objects accessible as elements of a dictionary keyed by Sim name


Operators
~~~~~~~~~

+ Create VMD operator that can take multiple objects and load all of them
  at once.

Operators.Anaysis
~~~~~~~~~~~~~~~~~

+ add a progressbar scheme that shows progress of multiple systems
  in a meaningful way; current one is meant for serial use.


Ideastorm
==========
Classes for handling md systems that are still being run?
+ integration with GromacsWrapper?
+ globus-toolkit methods and/or classes?

Markov analysis class?
+ see Michael Grabe's work on mitochondrial channels

Globus Toolkit!
+ build an Operator that can perform globus tasks on container objects
